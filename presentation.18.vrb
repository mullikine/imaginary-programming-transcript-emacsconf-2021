\frametitle{Imaginary Programming}
\begin{block}{Methodology}
Interactively use the language model to imagine.
\end{block}

\begin{block}{Paradigm}
Imaginary programming is an extension of literate programming.

\begin{itemize}
\item Literate programming with \texttt{org-mode}
\end{itemize}
\end{block}

\begin{block}{Practical application: mocking APIs}
As you can see, anything inside the \texttt{ieval/m}
macro does not have to be valid emacs lisp.

{\tiny
\begin{verbatim}
1  (ieval/m
2   (curl -s
3    "https://api.github.com/user/semiosis/repos?per_page=10&page=1"))
\end{verbatim}

\begin{verbatim}
"\"[((name . \\\"guix\\\") (description . \\\"The GNU package manager\\\") (updated_at . \\\"2014-04-21T18:49:59Z\\\") (created_at .
\\\"2014-04-21T18:49:59Z\\\") (pushed_at . \\\"2014-04-21T18:49:59Z\\\")) ((name . \\\"guix-patches\\\") (description .
\\\"Packages from the GNU guix package manager\\\") (updated_at . \\\"2014-04-21T18:49:59Z\\\") (created_at .
\\\"2014-04-21T18:49:59Z\\\") (pushed_at . \\\"2014-04-21T18:49:59Z\\\")) ((name . \\\"guix-patches-all\\\") (description .
\\\"Packages from the GNU guix package manager\\\") (updated_at . \\\"2014-04-21T18:49:59\""
\end{verbatim}
}
\end{block}
